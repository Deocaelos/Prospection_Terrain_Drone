/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class cFileMappingManettesServeur {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected cFileMappingManettesServeur(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(cFileMappingManettesServeur obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JNIFileMappingManettesServeurJNI.delete_cFileMappingManettesServeur(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public cFileMappingManettesServeur(boolean _DebugFlag) {
    this(JNIFileMappingManettesServeurJNI.new_cFileMappingManettesServeur(_DebugFlag), true);
  }

  public boolean OpenServer(String NameSharedMem) {
    return JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_OpenServer(swigCPtr, this, NameSharedMem);
  }

  public void CloseServer() {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_CloseServer(swigCPtr, this);
  }

  public cVirtualManettes ReadMapFileToVirtualManettesStruct(cVirtualManettes Data) {
    long cPtr = JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_ReadMapFileToVirtualManettesStruct(swigCPtr, this, cVirtualManettes.getCPtr(Data), Data);
    return (cPtr == 0) ? null : new cVirtualManettes(cPtr, false);
  }

  public boolean WriteVirtualManettesStructToMapFile(cVirtualManettes Data) {
    return JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_WriteVirtualManettesStructToMapFile(swigCPtr, this, cVirtualManettes.getCPtr(Data), Data);
  }

  public void PrintDebug(String msg, boolean _Return) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_PrintDebug(swigCPtr, this, msg, _Return);
  }

  public void PrintStruct(cVirtualManettes Data) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_PrintStruct(swigCPtr, this, cVirtualManettes.getCPtr(Data), Data);
  }

  public cVirtualManettes getVirtualManettesPtr() {
    long cPtr = JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_getVirtualManettesPtr(swigCPtr, this);
    return (cPtr == 0) ? null : new cVirtualManettes(cPtr, false);
  }

  public boolean getDebugMode() {
    return JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_getDebugMode(swigCPtr, this);
  }

  public boolean getVirtualManettesMutexBlocAccess() {
    return JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_getVirtualManettesMutexBlocAccess(swigCPtr, this);
  }

  public void setVirtualManettesPtr(cVirtualManettes VTStruct) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_setVirtualManettesPtr(swigCPtr, this, cVirtualManettes.getCPtr(VTStruct), VTStruct);
  }

  public void setDebugMode(boolean _DebugMode) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_setDebugMode(swigCPtr, this, _DebugMode);
  }

  public void setVirtualManettesMutexBlocAccess(boolean blocaccess) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_setVirtualManettesMutexBlocAccess(swigCPtr, this, blocaccess);
  }

  public void setVirtualManettesAxeX_Gauche(double value) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_setVirtualManettesAxeX_Gauche(swigCPtr, this, value);
  }

  public void setVirtualManettesAxeY_Gauche(double value) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_setVirtualManettesAxeY_Gauche(swigCPtr, this, value);
  }

  public void setVirtualManettesAxeX_Droite(double value) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_setVirtualManettesAxeX_Droite(swigCPtr, this, value);
  }

  public void setVirtualManettesAxeY_Droite(double value) {
    JNIFileMappingManettesServeurJNI.cFileMappingManettesServeur_setVirtualManettesAxeY_Droite(swigCPtr, this, value);
  }

}
