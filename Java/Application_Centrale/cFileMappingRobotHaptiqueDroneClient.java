/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class cFileMappingRobotHaptiqueDroneClient {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected cFileMappingRobotHaptiqueDroneClient(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(cFileMappingRobotHaptiqueDroneClient obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(cFileMappingRobotHaptiqueDroneClient obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        JNIFileMappingRobotHaptiqueDroneClientJNI.delete_cFileMappingRobotHaptiqueDroneClient(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public cFileMappingRobotHaptiqueDroneClient(boolean _DebugFlag) {
    this(JNIFileMappingRobotHaptiqueDroneClientJNI.new_cFileMappingRobotHaptiqueDroneClient(_DebugFlag), true);
  }

  public boolean OpenClient(String NameSharedMem) {
    return JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_OpenClient(swigCPtr, this, NameSharedMem);
  }

  public void CloseClient() {
    JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_CloseClient(swigCPtr, this);
  }

  public cVirtualRobotHaptiqueDrone ReadMapFileToVirtualRobotHaptiqueDroneStruct(cVirtualRobotHaptiqueDrone Data) {
    long cPtr = JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_ReadMapFileToVirtualRobotHaptiqueDroneStruct(swigCPtr, this, cVirtualRobotHaptiqueDrone.getCPtr(Data), Data);
    return (cPtr == 0) ? null : new cVirtualRobotHaptiqueDrone(cPtr, false);
  }

  public boolean WriteVirtualRobotHaptiqueDroneStructToMapFile(cVirtualRobotHaptiqueDrone Data) {
    return JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_WriteVirtualRobotHaptiqueDroneStructToMapFile(swigCPtr, this, cVirtualRobotHaptiqueDrone.getCPtr(Data), Data);
  }

  public void PrintDebug(String msg, boolean _Return) {
    JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_PrintDebug(swigCPtr, this, msg, _Return);
  }

  public void PrintStruct(cVirtualRobotHaptiqueDrone Data) {
    JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_PrintStruct(swigCPtr, this, cVirtualRobotHaptiqueDrone.getCPtr(Data), Data);
  }

  public cVirtualRobotHaptiqueDrone getVirtualRobotHaptiqueDronePtr() {
    long cPtr = JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_getVirtualRobotHaptiqueDronePtr(swigCPtr, this);
    return (cPtr == 0) ? null : new cVirtualRobotHaptiqueDrone(cPtr, false);
  }

  public boolean getDebugMode() {
    return JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_getDebugMode(swigCPtr, this);
  }

  public boolean getVirtualRobotHaptiqueDroneMutexBlocAccess() {
    return JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_getVirtualRobotHaptiqueDroneMutexBlocAccess(swigCPtr, this);
  }

  public boolean getVirtualRobotHaptiqueDroneUserPresence() {
    return JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_getVirtualRobotHaptiqueDroneUserPresence(swigCPtr, this);
  }

  public int getVirtualRobotHaptiqueDroneAxeX() {
    return JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_getVirtualRobotHaptiqueDroneAxeX(swigCPtr, this);
  }

  public int getVirtualRobotHaptiqueDroneAxeY() {
    return JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_getVirtualRobotHaptiqueDroneAxeY(swigCPtr, this);
  }

  public int getVirtualRobotHaptiqueDroneAxeZ() {
    return JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_getVirtualRobotHaptiqueDroneAxeZ(swigCPtr, this);
  }

  public void setVirtualRobotHaptiqueDronePtr(cVirtualRobotHaptiqueDrone VPStruct) {
    JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_setVirtualRobotHaptiqueDronePtr(swigCPtr, this, cVirtualRobotHaptiqueDrone.getCPtr(VPStruct), VPStruct);
  }

  public void setDebugMode(boolean _DebugMode) {
    JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_setDebugMode(swigCPtr, this, _DebugMode);
  }

  public void setVirtualRobotHaptiqueDroneMutexBlocAccess(boolean blocaccess) {
    JNIFileMappingRobotHaptiqueDroneClientJNI.cFileMappingRobotHaptiqueDroneClient_setVirtualRobotHaptiqueDroneMutexBlocAccess(swigCPtr, this, blocaccess);
  }

}
